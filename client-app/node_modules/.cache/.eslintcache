[{"/Users/noamk/Documents/GitHub/music-map/client-app/src/index.js":"1","/Users/noamk/Documents/GitHub/music-map/client-app/src/App.js":"2","/Users/noamk/Documents/GitHub/music-map/client-app/src/components/headerNavbar.jsx":"3","/Users/noamk/Documents/GitHub/music-map/client-app/src/pages/HomePage.jsx":"4","/Users/noamk/Documents/GitHub/music-map/client-app/src/components/map.jsx":"5","/Users/noamk/Documents/GitHub/music-map/client-app/src/components/artistsSideBar.jsx":"6","/Users/noamk/Documents/GitHub/music-map/client-app/src/pages/LoginPage.jsx":"7","/Users/noamk/Documents/GitHub/music-map/client-app/src/components/login.jsx":"8","/Users/noamk/Documents/GitHub/music-map/client-app/src/firebase.js":"9","/Users/noamk/Documents/GitHub/music-map/client-app/src/pages/ArtistPage.jsx":"10","/Users/noamk/Documents/GitHub/music-map/client-app/src/axios.js":"11","/Users/noamk/Documents/GitHub/music-map/client-app/src/pages/AdminPage.jsx":"12","/Users/noamk/Documents/GitHub/music-map/client-app/src/components/addNewArtist.jsx":"13"},{"size":289,"mtime":1621615050881,"results":"14","hashOfConfig":"15"},{"size":3980,"mtime":1621685816925,"results":"16","hashOfConfig":"15"},{"size":747,"mtime":1621684626339,"results":"17","hashOfConfig":"15"},{"size":1964,"mtime":1621685866591,"results":"18","hashOfConfig":"15"},{"size":1511,"mtime":1621500603516,"results":"19","hashOfConfig":"15"},{"size":1090,"mtime":1621683123927,"results":"20","hashOfConfig":"15"},{"size":3845,"mtime":1621614976442,"results":"21","hashOfConfig":"15"},{"size":3593,"mtime":1621613721232,"results":"22","hashOfConfig":"15"},{"size":920,"mtime":1621274257244,"results":"23","hashOfConfig":"15"},{"size":1143,"mtime":1621686077867,"results":"24","hashOfConfig":"15"},{"size":105,"mtime":1621489898285,"results":"25","hashOfConfig":"15"},{"size":1067,"mtime":1621683754333,"results":"26","hashOfConfig":"15"},{"size":3486,"mtime":1621686130386,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},"10ed80d",{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"31"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"31"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/noamk/Documents/GitHub/music-map/client-app/src/index.js",["59"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport LoginPage from './pages/LoginPage';\nimport './styles/index.css';\n\nReactDOM.render(\n      <React.StrictMode>\n            <App />\n      </React.StrictMode>,\n      document.getElementById('root')\n);\n",["60","61"],"/Users/noamk/Documents/GitHub/music-map/client-app/src/App.js",["62"],"import React, { useState, useEffect } from 'react';\nimport { axios } from './axios';\nimport { HashRouter, Route } from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport LoginPage from './pages/LoginPage';\nimport ArtistPage from './pages/ArtistPage';\n\nconst App = () => {\n      const [artistsFull, setArtistsFull] = useState([]);\n      const [locationsFull, setLocationsFull] = useState([]);\n\n      const [searchTerm, setSearchTerm] = useState('');\n\n      const [artistsResults, setArtistsResults] = useState([]);\n      const [locationsResults, setLocationsResults] = useState([]);\n\n      const [selectedArtist, setSelectedArtist] = useState(artistsFull[0]);\n\n      //**** GET DATA  */\n      const getAllArtists = async () => {\n            const response = await axios\n                  .get('/artists')\n                  .catch((err) => console.log('Error: ', err));\n            if (response && response.data) {\n                  setArtistsFull(response.data);\n                  setArtistsResults(response.data);\n            }\n      };\n      const getAllLocations = async () => {\n            const response = await axios\n                  .get('/locations')\n                  .catch((err) => console.log('Error: ', err));\n            if (response && response.data) setLocationsFull(response.data);\n      };\n\n      useEffect(() => {\n            getAllArtists();\n            getAllLocations();\n      }, []);\n\n      const getLocationsList = () => {\n            const locationsIdList = artistsResults.map((a) => a.location);\n            const locationsToMark = locationsFull.filter((m) =>\n                  locationsIdList.includes(m.id)\n            );\n            setLocationsResults(locationsToMark);\n            console.log(locationsResults);\n      };\n\n      //return only artist with names that includes the input\n      const searchHandler = () => {\n            if (searchTerm !== '') {\n                  const newArtistlist = artistsFull.filter((a) => {\n                        return Object.values(a)\n                              .join(' ')\n                              .toLowerCase()\n                              .includes(searchTerm.toLowerCase());\n                  });\n                  setArtistsResults(newArtistlist);\n                  //get distinct locations array from artistresults list\n                  getLocationsList();\n            } else {\n                  setArtistsResults(artistsFull);\n                  getLocationsList();\n            }\n      };\n      const headerText = 'Admin';\n      // go to artist page once artist selected\n\n      useEffect(() => {\n            console.log('link to this artist page', selectedArtist);\n      }, [selectedArtist]);\n\n      // const history = useHistory();\n      // const goLoginPage = () => history.push('/login');\n\n      const getInput = (inputTerm) => {\n            setSearchTerm(inputTerm);\n            searchHandler();\n      };\n\n      return (\n            <div className='app'>\n                  <HashRouter>\n                        <main className='container'>\n                              <Route exact path='/'>\n                                    <HomePage\n                                          artists={artistsResults}\n                                          locations={locationsResults}\n                                          selectedArtistsCB={setSelectedArtist}\n                                          searchHandler={getInput}\n                                    />\n                              </Route>\n                              <Route exact path='/login'>\n                                    <LoginPage />\n                              </Route>\n\n                              <Route exact path='/artist/:id'>\n                                    <ArtistPage />\n                              </Route>\n                        </main>\n                  </HashRouter>\n                  <footer className='footer'></footer>;\n            </div>\n      );\n};\n\nexport default App;\n","/Users/noamk/Documents/GitHub/music-map/client-app/src/components/headerNavbar.jsx",[],"/Users/noamk/Documents/GitHub/music-map/client-app/src/pages/HomePage.jsx",["63"],"/Users/noamk/Documents/GitHub/music-map/client-app/src/components/map.jsx",[],"/Users/noamk/Documents/GitHub/music-map/client-app/src/components/artistsSideBar.jsx",[],"/Users/noamk/Documents/GitHub/music-map/client-app/src/pages/LoginPage.jsx",["64","65","66"],"import React, { useState, useEffect } from 'react';\nimport fire from '../firebase';\nimport Login from '../components/login';\nimport HeaderNavBar from '../components/headerNavbar';\nimport AdminPage from './AdminPage';\n\nconst LoginPage = () => {\n      const [user, setUser] = useState('');\n      const [email, setEmail] = useState('');\n      const [password, setPassword] = useState('');\n      const [emailError, setEmailError] = useState('');\n      const [passwordError, setPasswordError] = useState('');\n      const [hasAccount, setHasAccount] = useState('false');\n\n      const clearInputs = () => {\n            setEmail('');\n            setUser('');\n      };\n      const clearErrors = () => {\n            setEmailError('');\n            setPasswordError('');\n      };\n\n      const handleLogin = () => {\n            clearErrors();\n            fire.auth()\n                  .signInWithEmailAndPassword(email, password)\n                  .catch((err) => {\n                        switch (err.code) {\n                              case 'auth/invalid-email':\n                              case 'auth/user-disabled':\n                              case 'auth/user-not-found':\n                                    setEmailError(err.message);\n                                    break;\n                              case 'auth/wrong-password':\n                                    setPasswordError(err.message);\n                                    break;\n                        }\n                  });\n      };\n\n      const handleSignup = () => {\n            clearErrors();\n            fire.auth()\n                  .createUserWithEmailAndPassword(email, password)\n                  .catch((err) => {\n                        switch (err.code) {\n                              case 'auth/email-already-in-use':\n                              case 'auth/invalid-email':\n                                    setEmailError(err.message);\n                                    break;\n                              case 'auth/weak-password':\n                                    setPasswordError(err.message);\n                                    break;\n                        }\n                  });\n      };\n\n      const handleLogout = () => {\n            clearInputs();\n            fire.auth().signOut();\n      };\n\n      const authListener = () => {\n            fire.auth().onAuthStateChanged((user) => {\n                  if (user) {\n                        clearInputs();\n                        setUser(user);\n                  } else {\n                        setUser('');\n                  }\n            });\n      };\n\n      useEffect(() => {\n            authListener();\n      }, []);\n\n      const headerButtonText = 'Logout';\n      return (\n            <div>\n                  <HeaderNavBar\n                        handleText={headerButtonText}\n                        handleAction={handleLogout}\n                  />\n                  <div>\n                        {user ? (\n                              <AdminPage handleLogout={handleLogout} />\n                        ) : (\n                              <Login\n                                    email={email}\n                                    setEmail={setEmail}\n                                    password={password}\n                                    setPassword={setPassword}\n                                    handleLogin={handleLogin}\n                                    handleSignup={handleSignup}\n                                    hasAccount={hasAccount}\n                                    setHasAccount={setHasAccount}\n                                    emailError={emailError}\n                                    passwordError={passwordError}\n                              />\n                        )}\n                  </div>\n            </div>\n      );\n};\n\nexport default LoginPage;\n","/Users/noamk/Documents/GitHub/music-map/client-app/src/components/login.jsx",[],"/Users/noamk/Documents/GitHub/music-map/client-app/src/firebase.js",[],"/Users/noamk/Documents/GitHub/music-map/client-app/src/pages/ArtistPage.jsx",["67","68"],"/Users/noamk/Documents/GitHub/music-map/client-app/src/axios.js",[],"/Users/noamk/Documents/GitHub/music-map/client-app/src/pages/AdminPage.jsx",["69"],"import React, { useState } from 'react';\nimport AddNewArtist from '../components/addNewArtist';\nimport { axios } from '../axios';\n\nconst AdminPage = ({ handleLogout }) => {\n      const [addNew, setAddNew] = useState(false);\n\n      const closeAddNewForm = () => {\n            setAddNew(false);\n      };\n\n      return (\n            <div className='container'>\n                  <h1>Admin Page</h1>\n\n                  <div>\n                        {addNew ? (\n                              <AddNewArtist\n                                    closeAddNewFormCB={closeAddNewForm}\n                              />\n                        ) : (\n                              <button\n                                    onClick={() => setAddNew(true)}\n                                    style={{ width: '100px' }}\n                              >\n                                    Create New Artist\n                              </button>\n                        )}\n                  </div>\n            </div>\n      );\n};\n\nexport default AdminPage;\n\n// id=\"formGridCheckbox\"\n","/Users/noamk/Documents/GitHub/music-map/client-app/src/components/addNewArtist.jsx",["70"],{"ruleId":"71","severity":1,"message":"72","line":4,"column":8,"nodeType":"73","messageId":"74","endLine":4,"endColumn":17},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"71","severity":1,"message":"79","line":67,"column":13,"nodeType":"73","messageId":"74","endLine":67,"endColumn":23},{"ruleId":"80","severity":1,"message":"81","line":18,"column":10,"nodeType":"82","endLine":18,"endColumn":17,"suggestions":"83"},{"ruleId":"84","severity":1,"message":"85","line":29,"column":25,"nodeType":"86","messageId":"87","endLine":38,"endColumn":26},{"ruleId":"84","severity":1,"message":"85","line":47,"column":25,"nodeType":"86","messageId":"87","endLine":55,"endColumn":26},{"ruleId":"80","severity":1,"message":"88","line":77,"column":10,"nodeType":"82","endLine":77,"endColumn":12,"suggestions":"89"},{"ruleId":"71","severity":1,"message":"90","line":1,"column":10,"nodeType":"73","messageId":"74","endLine":1,"endColumn":18},{"ruleId":"91","severity":1,"message":"92","line":23,"column":19,"nodeType":"93","endLine":23,"endColumn":53},{"ruleId":"71","severity":1,"message":"94","line":3,"column":10,"nodeType":"73","messageId":"74","endLine":3,"endColumn":15},{"ruleId":"71","severity":1,"message":"95","line":21,"column":19,"nodeType":"73","messageId":"74","endLine":21,"endColumn":27},"no-unused-vars","'LoginPage' is defined but never used.","Identifier","unusedVar","no-native-reassign",["96"],"no-negated-in-lhs",["97"],"'headerText' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getInput'. Either include it or remove the dependency array.","ArrayExpression",["98"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has a missing dependency: 'authListener'. Either include it or remove the dependency array.",["99"],"'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'axios' is defined but never used.","'response' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},"Update the dependencies array to be: [getInput, input]",{"range":"104","text":"105"},"Update the dependencies array to be: [authListener]",{"range":"106","text":"107"},[604,611],"[getInput, input]",[2664,2666],"[authListener]"]