{"ast":null,"code":"var _jsxFileName = \"/Users/noamk/Documents/GitHub/music-map/client-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport apiArists from \"./api/db\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [artists, setArtists] = useState(\"\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const inputEl = useRef(\"\"); //search \n\n  const getSearchTerm = () => {\n    searchKeyword(inputEl.current.value);\n  }; //   const searchHandler = (searchTerm) => {\n  //     setSearchTerm(searchTerm);\n  //     if (searchTerm !== \"\") {\n  //       const newArtistlist = artists.filter((a) => {\n  //         return Object.values(a)\n  //           .join(\" \")\n  //           .toLowerCase()\n  //           .includes(searchTerm.toLowerCase());\n  //       });\n  //       setSearchResults(newArtistlist);\n  //     } else {\n  //       setSearchResults(artists);\n  //     }\n  //   };\n  //artists functions\n\n\n  const retrieveArtists = async () => {\n    const response = await apiArists.get(\"/artists\");\n    return response.data;\n  };\n\n  useEffect(() => {\n    const getArtistsResults = async () => {\n      const allArtists = await retrieveArtists();\n      if (allArtists) setArtists(allArtists);\n    };\n\n    getArtistsResults();\n  }, [artists]);\n  useEffect(() => {}, [artists]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputEl,\n        type: \"text\" // placeholder=\"Search Artisit\"\n        ,\n        className: \"prompt\",\n        value: searchTerm,\n        onChange: getSearchTerm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"MY+VoPQNqz11e7eRDsn7SlDR82g=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/noamk/Documents/GitHub/music-map/client-app/src/App.js"],"names":["React","useState","useEffect","useRef","apiArists","App","artists","setArtists","searchTerm","setSearchTerm","searchResults","setSearchResults","inputEl","getSearchTerm","searchKeyword","current","value","retrieveArtists","response","get","data","getArtistsResults","allArtists"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,EAAoCC,MAApC,QAAkD,OAAlD;AACA,OAAOC,SAAP,MAAsB,UAAtB;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACd,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAuBN,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAMW,OAAO,GAAGT,MAAM,CAAC,EAAD,CAAtB,CAJc,CAOlB;;AACC,QAAMU,aAAa,GAAG,MAAM;AAC1BC,IAAAA,aAAa,CAACF,OAAO,CAACG,OAAR,CAAgBC,KAAjB,CAAb;AACA,GAFF,CARiB,CAalB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKC;;;AACC,QAAMC,eAAe,GAAG,YAAY;AAClC,UAAMC,QAAQ,GAAG,MAAMd,SAAS,CAACe,GAAV,CAAc,UAAd,CAAvB;AACA,WAAOD,QAAQ,CAACE,IAAhB;AACD,GAHD;;AAKAlB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMmB,iBAAiB,GAAG,YAAY;AACpC,YAAMC,UAAU,GAAG,MAAML,eAAe,EAAxC;AACA,UAAIK,UAAJ,EAAgBf,UAAU,CAACe,UAAD,CAAV;AACjB,KAHD;;AAIAD,IAAAA,iBAAiB;AAClB,GANQ,EAMN,CAACf,OAAD,CANM,CAAT;AAQAJ,EAAAA,SAAS,CAAC,MAAM,CAAE,CAAT,EAAW,CAACI,OAAD,CAAX,CAAT;AAEE,sBACI;AAAA,2BACA;AAAA,6BACG;AACC,QAAA,GAAG,EAAEM,OADN;AAEC,QAAA,IAAI,EAAC,MAFN,CAGC;AAHD;AAIC,QAAA,SAAS,EAAC,QAJX;AAKC,QAAA,KAAK,EAAEJ,UALR;AAMC,QAAA,QAAQ,EAAEK;AANX;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAcH,CA7DD;;GAAMR,G;;KAAAA,G;AA+DN,eAAeA,GAAf","sourcesContent":["import React, { useState,useEffect, useRef } from 'react';\nimport apiArists from \"./api/db\";\n\nconst App = () => {\n    const [artists, setArtists] =useState(\"\")\n    const [searchTerm, setSearchTerm] = useState(\"\");\n    const [searchResults, setSearchResults] = useState([]);\n    const inputEl = useRef(\"\");\n\n\n//search \n const getSearchTerm = () => {\n   searchKeyword(inputEl.current.value);\n  };\n\n\n//   const searchHandler = (searchTerm) => {\n//     setSearchTerm(searchTerm);\n//     if (searchTerm !== \"\") {\n//       const newArtistlist = artists.filter((a) => {\n//         return Object.values(a)\n//           .join(\" \")\n//           .toLowerCase()\n//           .includes(searchTerm.toLowerCase());\n//       });\n//       setSearchResults(newArtistlist);\n//     } else {\n//       setSearchResults(artists);\n//     }\n//   };\n\n\n\n\n //artists functions\n  const retrieveArtists = async () => {\n    const response = await apiArists.get(\"/artists\");\n    return response.data;\n  };\n\n  useEffect(() => {\n    const getArtistsResults = async () => {\n      const allArtists = await retrieveArtists();\n      if (allArtists) setArtists(allArtists);\n    };\n    getArtistsResults();\n  }, [artists]);\n\n  useEffect(() => {}, [artists]);\n\n    return ( \n        <>\n        <div>\n           <input\n            ref={inputEl}\n            type=\"text\"\n            // placeholder=\"Search Artisit\"\n            className=\"prompt\"\n            value={searchTerm}\n            onChange={getSearchTerm}\n          />\n           </div>\n        </>\n     );\n}\n \nexport default App;\n"]},"metadata":{},"sourceType":"module"}