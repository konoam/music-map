{"ast":null,"code":"var _jsxFileName = \"/Users/noamk/Documents/GitHub/music-map/client-app/src/components/addNewArtist.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport { Form, Col, Button, Row } from 'react-bootstrap';\nimport { axios } from '../axios'; // To Do :\n//       1. add form validation\n//       2. populate genres/location  select field list from db.js\n//       3. css\n//\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddNewArtist = ({\n  closeAddNewFormCB\n}) => {\n  _s();\n\n  const [form, setForm] = useState({\n    name: '',\n    type: '',\n    birth_name: '',\n    location: ''\n  });\n\n  const postArtist = async request => {\n    const response = await axios.post('/artists', request);\n    console.log('exit');\n  };\n\n  const handleChange = e => {\n    setForm({ ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const request = {\n      id: uuid(),\n      ...form\n    };\n    postArtist(request);\n    setForm({\n      name: '',\n      type: '',\n      birth_name: '',\n      location: ''\n    });\n    closeAddNewFormCB();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Col,\n        controlId: \"formGridName\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          placeholder: \"Enter Artits Name\",\n          name: \"name\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Col,\n        controlId: \"formGridType\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"select\",\n          defaultValue: \"Singer\",\n          name: \"type\",\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Singer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Compositors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Band\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formGridBirthName\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Birth Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        name: \"birth_name\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      as: Col,\n      controlId: \"formGridGenre\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Genre\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        name: \"genre\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Col,\n        controlId: \"formGridCity\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Col,\n        controlId: \"formGridState\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"State\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"select\",\n          defaultValue: \"Choose...\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Choose...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"worning\",\n      type: \"close\",\n      onClick: () => closeAddNewFormCB,\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 13\n  }, this);\n};\n\n_s(AddNewArtist, \"F/ImOgfxIghXsyi8pxd+Wy21RnE=\");\n\n_c = AddNewArtist;\nexport default AddNewArtist; //\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNewArtist\");","map":{"version":3,"sources":["/Users/noamk/Documents/GitHub/music-map/client-app/src/components/addNewArtist.jsx"],"names":["React","useState","v4","uuid","Form","Col","Button","Row","axios","AddNewArtist","closeAddNewFormCB","form","setForm","name","type","birth_name","location","postArtist","request","response","post","console","log","handleChange","e","target","value","handleSubmit","preventDefault","id"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport { Form, Col, Button, Row } from 'react-bootstrap';\nimport { axios } from '../axios';\n\n// To Do :\n//       1. add form validation\n//       2. populate genres/location  select field list from db.js\n//       3. css\n//\n\nconst AddNewArtist = ({ closeAddNewFormCB }) => {\n      const [form, setForm] = useState({\n            name: '',\n            type: '',\n            birth_name: '',\n            location: '',\n      });\n\n      const postArtist = async (request) => {\n            const response = await axios.post('/artists', request);\n            console.log('exit');\n      };\n\n      const handleChange = (e) => {\n            setForm({\n                  ...form,\n                  [e.target.name]: e.target.value,\n            });\n      };\n\n      const handleSubmit = (e) => {\n            e.preventDefault();\n            const request = {\n                  id: uuid(),\n                  ...form,\n            };\n            postArtist(request);\n\n            setForm({ name: '', type: '', birth_name: '', location: '' });\n            closeAddNewFormCB();\n      };\n\n      return (\n            <Form>\n                  <Row>\n                        <Form.Group as={Col} controlId='formGridName'>\n                              <Form.Label>Name</Form.Label>\n                              <Form.Control\n                                    placeholder='Enter Artits Name'\n                                    name='name'\n                                    onChange={handleChange}\n                              />\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId='formGridType'>\n                              <Form.Label>Type</Form.Label>\n                              <Form.Control\n                                    as='select'\n                                    defaultValue='Singer'\n                                    name='type'\n                                    onChange={handleChange}\n                              >\n                                    <option>Singer</option>\n                                    <option>Compositors</option>\n                                    <option>Band</option>\n                              </Form.Control>\n                        </Form.Group>\n                  </Row>\n\n                  <Form.Group controlId='formGridBirthName'>\n                        <Form.Label>Birth Name</Form.Label>\n                        <Form.Control\n                              name='birth_name'\n                              onChange={handleChange}\n                        />\n                  </Form.Group>\n\n                  <Form.Group as={Col} controlId='formGridGenre'>\n                        <Form.Label>Genre</Form.Label>\n                        <Form.Control name='genre' onChange={handleChange} />\n                  </Form.Group>\n\n                  <Row>\n                        <Form.Group as={Col} controlId='formGridCity'>\n                              <Form.Label>City</Form.Label>\n                              <Form.Control />\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId='formGridState'>\n                              <Form.Label>State</Form.Label>\n                              <Form.Control\n                                    as='select'\n                                    defaultValue='Choose...'\n                              >\n                                    <option>Choose...</option>\n                                    <option>...</option>\n                              </Form.Control>\n                        </Form.Group>\n                  </Row>\n\n                  <Button\n                        variant='primary'\n                        type='submit'\n                        onClick={handleSubmit}\n                  >\n                        Submit\n                  </Button>\n                  <Button\n                        variant='worning'\n                        type='close'\n                        onClick={() => closeAddNewFormCB}\n                  >\n                        Cancel\n                  </Button>\n            </Form>\n      );\n};\n\nexport default AddNewArtist;\n//\n"]},"metadata":{},"sourceType":"module"}