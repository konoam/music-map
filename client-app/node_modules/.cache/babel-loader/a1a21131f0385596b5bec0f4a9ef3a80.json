{"ast":null,"code":"var _jsxFileName = \"/Users/noamk/Documents/GitHub/music-map/client-app/src/components/addNewArtist.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport { Form, Col, Button, Row } from 'react-bootstrap';\nimport { axios } from '../axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddNewArtist = ({\n  closeAddNewFormCB\n}) => {\n  _s();\n\n  const [form, setForm] = useState({\n    inputAristName: '',\n    inputArtistType: ''\n  });\n  const [isSubmitted, setIsSubmitted] = useState(false); //   const [name, setName] = useState('');\n  //   const [birthName, setBirthName] = useState('');\n  //   const [genre, setGenre] = useState('');\n  //   const [city, setCity] = useState('');\n  //   const [type, setType] = useState('');\n\n  const addArtistHandler = async () => {\n    console.log('entered handler');\n    const request = {\n      id: uuid()\n    };\n    const response = await axios.post('/artists', request);\n    console.log('exit');\n  };\n\n  const handleChange = e => {\n    setForm({ ...form,\n      [e.target.name]: e.target.value\n    });\n    console.log(form);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: [isSubmitted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading ... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 34\n    }, this) : '', /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Col,\n        controlId: \"formGridName\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          placeholder: \"Enter Artits Name\",\n          name: \"inputAristName\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Col,\n        controlId: \"formGridType\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"select\",\n          defaultValue: \"Singer\",\n          name: \"inputArtistType\",\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Singer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Compositors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Band\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formGridBirthName\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Birth Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      as: Col,\n      controlId: \"formGridGenre\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Genre\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Col,\n        controlId: \"formGridCity\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Col,\n        controlId: \"formGridState\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"State\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"select\",\n          defaultValue: \"Choose...\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Choose...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"worning\",\n      type: \"close\",\n      onClick: () => closeAddNewFormCB,\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 13\n  }, this);\n};\n\n_s(AddNewArtist, \"PeyYSySWa6b/jAiYEYnKzHEjZuI=\");\n\n_c = AddNewArtist;\nexport default AddNewArtist;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNewArtist\");","map":{"version":3,"sources":["/Users/noamk/Documents/GitHub/music-map/client-app/src/components/addNewArtist.jsx"],"names":["React","useState","v4","uuid","Form","Col","Button","Row","axios","AddNewArtist","closeAddNewFormCB","form","setForm","inputAristName","inputArtistType","isSubmitted","setIsSubmitted","addArtistHandler","console","log","request","id","response","post","handleChange","e","target","name","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport { Form, Col, Button, Row } from 'react-bootstrap';\nimport { axios } from '../axios';\n\nconst AddNewArtist = ({ closeAddNewFormCB }) => {\n      const [form, setForm] = useState({\n            inputAristName: '',\n            inputArtistType: '',\n      });\n      const [isSubmitted, setIsSubmitted] = useState(false);\n      //   const [name, setName] = useState('');\n      //   const [birthName, setBirthName] = useState('');\n      //   const [genre, setGenre] = useState('');\n      //   const [city, setCity] = useState('');\n      //   const [type, setType] = useState('');\n\n      const addArtistHandler = async () => {\n            console.log('entered handler');\n\n            const request = {\n                  id: uuid(),\n            };\n\n            const response = await axios.post('/artists', request);\n            console.log('exit');\n      };\n\n      const handleChange = (e) => {\n            setForm({\n                  ...form,\n                  [e.target.name]: e.target.value,\n            });\n            console.log(form);\n      };\n\n      return (\n            <Form>\n                  {isSubmitted ? <div>Loading ... </div> : ''}\n\n                  <Row>\n                        <Form.Group as={Col} controlId='formGridName'>\n                              <Form.Label>Name</Form.Label>\n                              <Form.Control\n                                    placeholder='Enter Artits Name'\n                                    name='inputAristName'\n                                    onChange={handleChange}\n                              />\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId='formGridType'>\n                              <Form.Label>Type</Form.Label>\n                              <Form.Control\n                                    as='select'\n                                    defaultValue='Singer'\n                                    name='inputArtistType'\n                                    onChange={handleChange}\n                              >\n                                    <option>Singer</option>\n                                    <option>Compositors</option>\n                                    <option>Band</option>\n                              </Form.Control>\n                        </Form.Group>\n                  </Row>\n\n                  <Form.Group controlId='formGridBirthName'>\n                        <Form.Label>Birth Name</Form.Label>\n                        <Form.Control />\n                  </Form.Group>\n\n                  <Form.Group as={Col} controlId='formGridGenre'>\n                        <Form.Label>Genre</Form.Label>\n                        <Form.Control />\n                  </Form.Group>\n\n                  <Row>\n                        <Form.Group as={Col} controlId='formGridCity'>\n                              <Form.Label>City</Form.Label>\n                              <Form.Control />\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId='formGridState'>\n                              <Form.Label>State</Form.Label>\n                              <Form.Control\n                                    as='select'\n                                    defaultValue='Choose...'\n                              >\n                                    <option>Choose...</option>\n                                    <option>...</option>\n                              </Form.Control>\n                        </Form.Group>\n                  </Row>\n\n                  <Button variant='primary' type='submit'>\n                        Submit\n                  </Button>\n                  <Button\n                        variant='worning'\n                        type='close'\n                        onClick={() => closeAddNewFormCB}\n                  >\n                        Cancel\n                  </Button>\n            </Form>\n      );\n};\n\nexport default AddNewArtist;\n"]},"metadata":{},"sourceType":"module"}