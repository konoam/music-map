{"ast":null,"code":"var _jsxFileName = \"/Users/noamk/Documents/GitHub/music-map/client-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { axios } from \"./axios\";\nimport { HashRouter, Route } from 'react-router-dom';\nimport HeaderNavbar from \"./components/headerNavbar\";\nimport HomePage from \"./pages/HomePage\";\nimport LoginPage from \"./pages/LoginPage\";\nimport ArtistPage from \"./pages/ArtistPage\"; //To do : move the input to homepage or header or what ?\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [artistsFull, setArtistsFull] = useState([]);\n  const [locationsFull, setLocationsFull] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const inputEl = useRef(\"\");\n  const [artistsResults, setArtistsResults] = useState([]);\n  const [locationsResults, setLocationsResults] = useState([]);\n  const [selectedArtist, setSelectedArtist] = useState(artistsFull[0]); //**** GET DATA  */\n\n  const getAllArtists = async () => {\n    const response = await axios.get(\"/artists\").catch(err => console.log(\"Error: \", err));\n\n    if (response && response.data) {\n      setArtistsFull(response.data);\n      setArtistsResults(response.data);\n    }\n  };\n\n  const getAllLocations = async () => {\n    const response = await axios.get(\"/locations\").catch(err => console.log(\"Error: \", err));\n    if (response && response.data) setLocationsFull(response.data);\n  };\n\n  useEffect(() => {\n    getAllArtists();\n    getAllLocations();\n  }, []);\n\n  const getLocationsList = () => {\n    const locationsIdList = artistsResults.map(a => a.location);\n    const locationsToMark = locationsFull.filter(m => locationsIdList.includes(m.id));\n    setLocationsResults(locationsToMark);\n    console.log(locationsResults);\n  }; //return only artist with names that includes the input\n\n\n  const searchHandler = () => {\n    setSearchTerm(inputEl.current.value);\n\n    if (searchTerm !== \"\") {\n      const newArtistlist = artistsFull.filter(a => {\n        return Object.values(a).join(\" \").toLowerCase().includes(searchTerm.toLowerCase());\n      });\n      setArtistsResults(newArtistlist); //get distinct locations array from artistresults list\n\n      getLocationsList();\n    } else {\n      setArtistsResults(artistsFull);\n      getLocationsList();\n    }\n  }; // go to artist page once artist selected \n\n\n  useEffect(() => {\n    console.log(\"link to this artist page\", selectedArtist);\n    href = `/#/artist/1`;\n  }, [selectedArtist]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(HeaderNavbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputEl,\n        type: \"text\",\n        className: \"prompt\",\n        onChange: searchHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(HashRouter, {\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"page-container\",\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(HomePage, {\n            artists: artistsResults,\n            locations: locationsResults,\n            selectedArtistsCB: setSelectedArtist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/login\",\n          children: /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/artist/:id\",\n          children: /*#__PURE__*/_jsxDEV(ArtistPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"footer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 1\n    }, this), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 10\n  }, this);\n};\n\n_s(App, \"me9w5czkWwUFGq3vx5I/J4dwVZc=\");\n\n_c = App;\nexport default App; //  <>\n//         <HeaderNavbar/>\n//         <div>\n//            <input\n//             ref={inputEl}\n//             type=\"text\"\n//             className=\"prompt\"\n//             onChange={searchHandler} />\n//             <HomePage artists={artistsResults} locations={locationsResults} selectedArtistsCB={setSelectedArtist}/>       \n//         </div>\n//         </>\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/noamk/Documents/GitHub/music-map/client-app/src/App.js"],"names":["React","useState","useEffect","useRef","axios","HashRouter","Route","HeaderNavbar","HomePage","LoginPage","ArtistPage","App","artistsFull","setArtistsFull","locationsFull","setLocationsFull","searchTerm","setSearchTerm","inputEl","artistsResults","setArtistsResults","locationsResults","setLocationsResults","selectedArtist","setSelectedArtist","getAllArtists","response","get","catch","err","console","log","data","getAllLocations","getLocationsList","locationsIdList","map","a","location","locationsToMark","filter","m","includes","id","searchHandler","current","value","newArtistlist","Object","values","join","toLowerCase","href"],"mappings":"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","sourcesContent":["import React, { useState,useEffect, useRef } from 'react';\nimport {axios} from \"./axios\";\nimport { HashRouter,  Route } from 'react-router-dom';\n\nimport HeaderNavbar from \"./components/headerNavbar\";\nimport HomePage from \"./pages/HomePage\";\nimport LoginPage from \"./pages/LoginPage\";\nimport ArtistPage from \"./pages/ArtistPage\";\n//To do : move the input to homepage or header or what ?\n\n\nconst App = () => {\n    const [artistsFull, setArtistsFull] =useState([])\n    const [locationsFull, setLocationsFull] =useState([])\n\n    const [searchTerm, setSearchTerm] = useState(\"\");\n    const inputEl = useRef(\"\");\n\n    const [artistsResults, setArtistsResults] = useState([]);\n    const [locationsResults, setLocationsResults] = useState([]);\n   \n    const [selectedArtist, setSelectedArtist] = useState(artistsFull[0])\n\n\n//**** GET DATA  */\n    const getAllArtists = async()=>{\n      const response = await axios.get(\"/artists\").catch((err)=>console.log(\"Error: \",err))\n      if(response && response.data) {\n        setArtistsFull(response.data)\n        setArtistsResults(response.data)\n      }\n    }\n    const getAllLocations = async()=>{\n      const response = await axios.get(\"/locations\").catch((err)=>console.log(\"Error: \",err))\n      if(response && response.data) setLocationsFull(response.data) \n    }\n\n    useEffect(() => {\n      getAllArtists();\n      getAllLocations();\n    },[])\n\n\n    const getLocationsList =()=>{\n      const locationsIdList = artistsResults.map(a=> a.location)\n      const locationsToMark = locationsFull.filter(m => locationsIdList.includes(m.id))\n      setLocationsResults(locationsToMark)\n      console.log(locationsResults)\n    }\n\n\n//return only artist with names that includes the input\n    const searchHandler = () => {\n      setSearchTerm(inputEl.current.value);\n      \n      if (searchTerm !== \"\") {\n        const newArtistlist = artistsFull.filter((a) => {\n          return Object.values(a)\n            .join(\" \")\n            .toLowerCase()\n            .includes(searchTerm.toLowerCase());\n        });\n        setArtistsResults(newArtistlist);\n        //get distinct locations array from artistresults list\n        getLocationsList();\n      \n      } else {\n        setArtistsResults(artistsFull);\n        getLocationsList();\n      }\n    };\n\n\n\n// go to artist page once artist selected \n \nuseEffect(() => {\n     console.log(\"link to this artist page\",selectedArtist)\n    href=`/#/artist/1`\n    },[selectedArtist])\n\n\n\n\n    return ( \n         <div>\n                <header className=\"header\">\n                  <HeaderNavbar/>\n                 <input\n                      ref={inputEl}\n                      type=\"text\"\n                      className=\"prompt\"\n                      onChange={searchHandler} />\n                 </header>\n            <HashRouter>\n                <main className=\"page-container\">  \n                    <Route  exact path=\"/\"   >\n                      <HomePage artists={artistsResults} locations={locationsResults} selectedArtistsCB={setSelectedArtist}/>\n                      </Route>\n                    <Route exact path=\"/login\">\n                      <LoginPage/>\n                      </Route>  \n\n              <Route exact path=\"/artist/:id\">\n                      <ArtistPage/>\n                      </Route>  \n\n                </main>\n            </HashRouter>\n<footer className=\"footer\"></footer>;\n    \n    </div>\n       \n     );\n}\n \nexport default App;\n\n\n//  <>\n//         <HeaderNavbar/>\n//         <div>\n//            <input\n//             ref={inputEl}\n//             type=\"text\"\n//             className=\"prompt\"\n//             onChange={searchHandler} />\n\n//             <HomePage artists={artistsResults} locations={locationsResults} selectedArtistsCB={setSelectedArtist}/>       \n          \n//         </div>\n//         </>\n"]},"metadata":{},"sourceType":"module"}