{"ast":null,"code":"var _jsxFileName = \"/Users/noamk/Documents/GitHub/music-map/client-app/src/pages/LoginPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport fire from '../firebase';\nimport Login from '../components/login';\nimport HeaderNavBar from '../components/headerNavbar';\nimport AdminPage from './AdminPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginPage = () => {\n  _s();\n\n  const [user, setUser] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [hasAccount, setHasAccount] = useState('false');\n  const history = useHistory();\n\n  const handleClick = () => history.push('/#/LoginPage');\n\n  const clearInputs = () => {\n    setEmail('');\n    setUser('');\n  };\n\n  const clearErrors = () => {\n    setEmailError('');\n    setPasswordError('');\n  };\n\n  const handleLogin = () => {\n    clearErrors();\n    fire.auth().signInWithEmailAndPassword(email, password).catch(err => {\n      switch (err.code) {\n        case 'auth/invalid-email':\n        case 'auth/user-disabled':\n        case 'auth/user-not-found':\n          setEmailError(err.message);\n          break;\n\n        case 'auth/wrong-password':\n          setPasswordError(err.message);\n          break;\n      }\n    });\n  };\n\n  const handleSignup = () => {\n    clearErrors();\n    fire.auth().createUserWithEmailAndPassword(email, password).catch(err => {\n      switch (err.code) {\n        case 'auth/email-already-in-use':\n        case 'auth/invalid-email':\n          setEmailError(err.message);\n          break;\n\n        case 'auth/weak-password':\n          setPasswordError(err.message);\n          break;\n      }\n    });\n  };\n\n  const handleLogout = () => {\n    clearInputs();\n    fire.auth().signOut();\n  };\n\n  const authListener = () => {\n    fire.auth().onAuthStateChanged(user => {\n      if (user) {\n        clearInputs();\n        setUser(user);\n      } else {\n        setUser('');\n      }\n    });\n  };\n\n  useEffect(() => {\n    authListener();\n  }, []);\n  const headerButtonText = 'Logout';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(HeaderNavBar, {\n      handleText: headerButtonText,\n      handleAction: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: user ? /*#__PURE__*/_jsxDEV(AdminPage, {\n        handleLogout: handleLogout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 31\n      }, this) : /*#__PURE__*/_jsxDEV(Login, {\n        email: email,\n        setEmail: setEmail,\n        password: password,\n        setPassword: setPassword,\n        handleLogin: handleLogin,\n        handleSignup: handleSignup,\n        hasAccount: hasAccount,\n        setHasAccount: setHasAccount,\n        emailError: emailError,\n        passwordError: passwordError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 31\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 13\n  }, this);\n};\n\n_s(LoginPage, \"ixMpFV26b4yBfxGJvE6gBn8I5SQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/Users/noamk/Documents/GitHub/music-map/client-app/src/pages/LoginPage.jsx"],"names":["React","useState","useEffect","useHistory","fire","Login","HeaderNavBar","AdminPage","LoginPage","user","setUser","email","setEmail","password","setPassword","emailError","setEmailError","passwordError","setPasswordError","hasAccount","setHasAccount","history","handleClick","push","clearInputs","clearErrors","handleLogin","auth","signInWithEmailAndPassword","catch","err","code","message","handleSignup","createUserWithEmailAndPassword","handleLogout","signOut","authListener","onAuthStateChanged","headerButtonText"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport fire from '../firebase';\nimport Login from '../components/login';\nimport HeaderNavBar from '../components/headerNavbar';\nimport AdminPage from './AdminPage';\n\nconst LoginPage = () => {\n      const [user, setUser] = useState('');\n      const [email, setEmail] = useState('');\n      const [password, setPassword] = useState('');\n      const [emailError, setEmailError] = useState('');\n      const [passwordError, setPasswordError] = useState('');\n      const [hasAccount, setHasAccount] = useState('false');\n\n      const history = useHistory();\n      const handleClick = () => history.push('/#/LoginPage');\n\n      const clearInputs = () => {\n            setEmail('');\n            setUser('');\n      };\n      const clearErrors = () => {\n            setEmailError('');\n            setPasswordError('');\n      };\n\n      const handleLogin = () => {\n            clearErrors();\n            fire.auth()\n                  .signInWithEmailAndPassword(email, password)\n                  .catch((err) => {\n                        switch (err.code) {\n                              case 'auth/invalid-email':\n                              case 'auth/user-disabled':\n                              case 'auth/user-not-found':\n                                    setEmailError(err.message);\n                                    break;\n                              case 'auth/wrong-password':\n                                    setPasswordError(err.message);\n                                    break;\n                        }\n                  });\n      };\n\n      const handleSignup = () => {\n            clearErrors();\n            fire.auth()\n                  .createUserWithEmailAndPassword(email, password)\n                  .catch((err) => {\n                        switch (err.code) {\n                              case 'auth/email-already-in-use':\n                              case 'auth/invalid-email':\n                                    setEmailError(err.message);\n                                    break;\n                              case 'auth/weak-password':\n                                    setPasswordError(err.message);\n                                    break;\n                        }\n                  });\n      };\n\n      const handleLogout = () => {\n            clearInputs();\n            fire.auth().signOut();\n      };\n\n      const authListener = () => {\n            fire.auth().onAuthStateChanged((user) => {\n                  if (user) {\n                        clearInputs();\n                        setUser(user);\n                  } else {\n                        setUser('');\n                  }\n            });\n      };\n\n      useEffect(() => {\n            authListener();\n      }, []);\n\n      const headerButtonText = 'Logout';\n      return (\n            <div>\n                  <HeaderNavBar\n                        handleText={headerButtonText}\n                        handleAction={handleLogout}\n                  />\n                  <div>\n                        {user ? (\n                              <AdminPage handleLogout={handleLogout} />\n                        ) : (\n                              <Login\n                                    email={email}\n                                    setEmail={setEmail}\n                                    password={password}\n                                    setPassword={setPassword}\n                                    handleLogin={handleLogin}\n                                    handleSignup={handleSignup}\n                                    hasAccount={hasAccount}\n                                    setHasAccount={setHasAccount}\n                                    emailError={emailError}\n                                    passwordError={passwordError}\n                              />\n                        )}\n                  </div>\n            </div>\n      );\n};\n\nexport default LoginPage;\n"]},"metadata":{},"sourceType":"module"}