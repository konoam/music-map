{"ast":null,"code":"var _jsxFileName = \"/Users/noamk/Documents/GitHub/music-map/client-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { axios } from './axios';\nimport { HashRouter, Route } from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport LoginPage from './pages/LoginPage';\nimport ArtistPage from './pages/ArtistPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  //    *** APP STATES\n  const [artistsFull, setArtistsFull] = useState([]);\n  const [locationsFull, setLocationsFull] = useState([]);\n  const [searchTerm, setSearchTerm] = useState([]);\n  const [artistsResults, setArtistsResults] = useState([]);\n  const [locationsResults, setLocationsResults] = useState([]);\n  const [selectedArtist, setSelectedArtist] = useState(artistsFull[0]); //    ***  GET & SET FULL DATA  ***\n\n  const getAllArtists = async () => {\n    const response = await axios.get('/artists').catch(err => console.log('Error: ', err));\n    if (response && response.data) setArtistsFull(response.data);\n  };\n\n  const getAllLocations = async () => {\n    const response = await axios.get('/locations').catch(err => console.log('Error: ', err));\n\n    if (response && response.data) {\n      setLocationsFull(response.data);\n      setLocationsResults(response.data);\n    }\n  };\n\n  useEffect(() => {\n    getAllArtists();\n    getAllLocations();\n    setArtistsResults(artistsFull.slice(0, 7));\n    setLocationsResults(locationsResults.slice(0, 20));\n  }, []);\n  useEffect(() => {\n    setArtistsResults(artistsFull.slice(0, 7));\n  }, [artistsFull]);\n  useEffect(() => {\n    setLocationsResults(locationsResults.slice(0, 20));\n  }, [artistsFull]); //    *** HANDLE SEARCH RESULTS ***\n  //1. get input from HomePage and send to searchHandler\n\n  const getInput = inputTerm => {\n    return setSearchTerm(inputTerm);\n  }; //2. update searchTerm on each inputTerm change\n\n\n  useEffect(() => {\n    searchHandler();\n  }, [searchTerm]); //3. return only artist with names that includes the input\n\n  const searchHandler = () => {\n    if (searchTerm !== '') {\n      const newArtistlist = artistsFull.filter(a => {\n        return Object.values(a).join(' ').toLowerCase().includes(searchTerm.toLowerCase());\n      });\n      setArtistsResults(newArtistlist); //get distinct locations array from artistresults list\n\n      getLocationsList();\n    } else {\n      setArtistsResults(artistsFull);\n      console.log('else');\n      getLocationsList();\n    }\n  }; //4. filter location list accordind to artist filtered list\n\n\n  const getLocationsList = () => {\n    const locationsIdList = artistsResults.map(a => a.location);\n    const locationsToMark = locationsFull.filter(m => locationsIdList.includes(m.id));\n    setLocationsResults(locationsToMark);\n    console.log(locationsResults);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(HashRouter, {\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(HomePage, {\n            artists: artistsResults,\n            locations: locationsResults,\n            selectedArtistsCB: setSelectedArtist,\n            getInput: getInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/login\",\n          children: /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/artist/:id\",\n          children: /*#__PURE__*/_jsxDEV(ArtistPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"footer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 19\n    }, this), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 13\n  }, this);\n};\n\n_s(App, \"RJGEguti6dBroHe74O9XEmdnmHk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/noamk/Documents/GitHub/music-map/client-app/src/App.js"],"names":["React","useState","useEffect","axios","HashRouter","Route","HomePage","LoginPage","ArtistPage","App","artistsFull","setArtistsFull","locationsFull","setLocationsFull","searchTerm","setSearchTerm","artistsResults","setArtistsResults","locationsResults","setLocationsResults","selectedArtist","setSelectedArtist","getAllArtists","response","get","catch","err","console","log","data","getAllLocations","slice","getInput","inputTerm","searchHandler","newArtistlist","filter","a","Object","values","join","toLowerCase","includes","getLocationsList","locationsIdList","map","location","locationsToMark","m","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { axios } from './axios';\nimport { HashRouter, Route } from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport LoginPage from './pages/LoginPage';\nimport ArtistPage from './pages/ArtistPage';\n\nconst App = () => {\n      //    *** APP STATES\n      const [artistsFull, setArtistsFull] = useState([]);\n      const [locationsFull, setLocationsFull] = useState([]);\n      const [searchTerm, setSearchTerm] = useState([]);\n      const [artistsResults, setArtistsResults] = useState([]);\n      const [locationsResults, setLocationsResults] = useState([]);\n      const [selectedArtist, setSelectedArtist] = useState(artistsFull[0]);\n\n      //    ***  GET & SET FULL DATA  ***\n      const getAllArtists = async () => {\n            const response = await axios\n                  .get('/artists')\n                  .catch((err) => console.log('Error: ', err));\n            if (response && response.data) setArtistsFull(response.data);\n      };\n      const getAllLocations = async () => {\n            const response = await axios\n                  .get('/locations')\n                  .catch((err) => console.log('Error: ', err));\n            if (response && response.data) {\n                  setLocationsFull(response.data);\n                  setLocationsResults(response.data);\n            }\n      };\n\n      useEffect(() => {\n            getAllArtists();\n            getAllLocations();\n            setArtistsResults(artistsFull.slice(0, 7));\n            setLocationsResults(locationsResults.slice(0, 20));\n      }, []);\n\n      useEffect(() => {\n            setArtistsResults(artistsFull.slice(0, 7));\n      }, [artistsFull]);\n\n      useEffect(() => {\n            setLocationsResults(locationsResults.slice(0, 20));\n      }, [artistsFull]);\n\n      //    *** HANDLE SEARCH RESULTS ***\n\n      //1. get input from HomePage and send to searchHandler\n      const getInput = (inputTerm) => {\n            return setSearchTerm(inputTerm);\n      };\n      //2. update searchTerm on each inputTerm change\n      useEffect(() => {\n            searchHandler();\n      }, [searchTerm]);\n\n      //3. return only artist with names that includes the input\n      const searchHandler = () => {\n            if (searchTerm !== '') {\n                  const newArtistlist = artistsFull.filter((a) => {\n                        return Object.values(a)\n                              .join(' ')\n                              .toLowerCase()\n                              .includes(searchTerm.toLowerCase());\n                  });\n                  setArtistsResults(newArtistlist);\n                  //get distinct locations array from artistresults list\n                  getLocationsList();\n            } else {\n                  setArtistsResults(artistsFull);\n                  console.log('else');\n                  getLocationsList();\n            }\n      };\n\n      //4. filter location list accordind to artist filtered list\n      const getLocationsList = () => {\n            const locationsIdList = artistsResults.map((a) => a.location);\n            const locationsToMark = locationsFull.filter((m) =>\n                  locationsIdList.includes(m.id)\n            );\n            setLocationsResults(locationsToMark);\n            console.log(locationsResults);\n      };\n\n      return (\n            <div className='app'>\n                  <HashRouter>\n                        <main className='container'>\n                              <Route exact path='/'>\n                                    <HomePage\n                                          artists={artistsResults}\n                                          locations={locationsResults}\n                                          selectedArtistsCB={setSelectedArtist}\n                                          getInput={getInput}\n                                    />\n                              </Route>\n                              <Route exact path='/login'>\n                                    <LoginPage />\n                              </Route>\n\n                              <Route exact path='/artist/:id'>\n                                    <ArtistPage />\n                              </Route>\n                        </main>\n                  </HashRouter>\n                  <footer className='footer'></footer>;\n            </div>\n      );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}