{"ast":null,"code":"var _jsxFileName = \"/Users/noamk/Documents/GitHub/music-map/client-app/src/pages/HomePage.jsx\",\n    _s = $RefreshSig$();\n\n//hooks\nimport { useState, useEffect } from \"react\"; //data\n\nimport apiArists from \"../api/db\";\nimport apiGenres from \"../api/db\"; //components\n\nimport Map from \"../components/map\";\nimport ArtistsSideBar from \"../components/artistsSideBar\";\nimport Filter from \"../components/filter\"; //design\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HomePage = props => {\n  _s();\n\n  const {\n    locations\n  } = props; //states\n\n  const [artists, setArtists] = useState([]);\n  const [genres, setGenres] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]); //artists functions\n\n  const retrieveArtists = async () => {\n    const response = await apiArists.get(\"/artists\");\n    return response.data;\n  };\n\n  useEffect(() => {\n    const getAllArtists = async () => {\n      const allArtists = await retrieveArtists();\n      if (allArtists) setArtists(allArtists);\n    };\n\n    getAllArtists();\n  }, []);\n  useEffect(() => {}, [artists]); //genres functions\n\n  const retrieveGenres = async () => {\n    const response = await apiGenres.get(\"/genres\");\n    return response.data;\n  };\n\n  useEffect(() => {\n    const getAllGenres = async () => {\n      const allGenres = await retrieveGenres();\n      if (allGenres) setGenres(allGenres);\n    };\n\n    getAllGenres();\n  }, []);\n  useEffect(() => {}, [genres]); //search \n\n  const searchHandler = searchTerm => {\n    setSearchTerm(searchTerm);\n\n    if (searchTerm !== \"\") {\n      const newArtistlist = artists.filter(a => {\n        return Object.values(a).join(\" \").toLowerCase().includes(searchTerm.toLowerCase());\n      });\n      setSearchResults(newArtistlist);\n    } else {\n      setSearchResults(artists);\n    }\n  }; //homepage renderding\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(Map, {\n          locations: locations\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(Filter, {\n          genres: genres\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Filter, {\n          genres: genres\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ArtistsSideBar, {\n          className: \"sideBar\",\n          artists: searchTerm < 1 ? artists : searchResults,\n          term: searchTerm,\n          searchKeyword: searchHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HomePage, \"bilUaSsuUIat7HCxKw0iXtcgn3g=\");\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/noamk/Documents/GitHub/music-map/client-app/src/pages/HomePage.jsx"],"names":["useState","useEffect","apiArists","apiGenres","Map","ArtistsSideBar","Filter","HomePage","props","locations","artists","setArtists","genres","setGenres","searchTerm","setSearchTerm","searchResults","setSearchResults","retrieveArtists","response","get","data","getAllArtists","allArtists","retrieveGenres","getAllGenres","allGenres","searchHandler","newArtistlist","filter","a","Object","values","join","toLowerCase","includes"],"mappings":"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","sourcesContent":["//hooks\nimport { useState, useEffect } from \"react\";\n//data\nimport apiArists from \"../api/db\";\nimport apiGenres from \"../api/db\";\n//components\nimport Map from \"../components/map\";\nimport ArtistsSideBar from \"../components/artistsSideBar\";\nimport Filter from \"../components/filter\";\n//design\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst HomePage = (props) => {\n\n  const {locations} = props\n\n  //states\n  const [artists, setArtists] = useState([]);\n  const [genres, setGenres] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n\n  //artists functions\n  const retrieveArtists = async () => {\n    const response = await apiArists.get(\"/artists\");\n    return response.data;\n  };\n\n  useEffect(() => {\n    const getAllArtists = async () => {\n      const allArtists = await retrieveArtists();\n      if (allArtists) setArtists(allArtists);\n    };\n    getAllArtists();\n  }, []);\n\n  useEffect(() => {}, [artists]);\n\n\n//genres functions\n\nconst retrieveGenres = async () => {\n    const response = await apiGenres.get(\"/genres\");\n    return response.data;\n\n  };\n\n\n  useEffect(() => {\n    const getAllGenres = async () => {\n      const allGenres = await retrieveGenres();\n      if (allGenres) setGenres(allGenres);\n    };\n    getAllGenres();\n  }, []);\n\n  useEffect(() => {}, [genres]);\n\n\n\n\n\n\n\n\n \n//search \n  const searchHandler = (searchTerm) => {\n    setSearchTerm(searchTerm);\n    if (searchTerm !== \"\") {\n      const newArtistlist = artists.filter((a) => {\n        return Object.values(a)\n          .join(\" \")\n          .toLowerCase()\n          .includes(searchTerm.toLowerCase());\n      });\n      setSearchResults(newArtistlist);\n    } else {\n      setSearchResults(artists);\n    }\n  };\n\n\n\n  //homepage renderding\n  return (\n    <div className=\"container\">\n      {/* {console.log(genres)} */}\n      <div className=\"row\">\n        <div className=\"col\">\n          <Map locations={locations}/>\n          \n        </div>\n        <div className=\"col\">\n           <Filter genres={genres}/>\n          <Filter genres={genres}/>\n          <ArtistsSideBar\n            className=\"sideBar\"\n            artists={searchTerm < 1 ? artists : searchResults}\n            term={searchTerm}\n            searchKeyword={searchHandler}\n          />\n         \n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}