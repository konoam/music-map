{"ast":null,"code":"var _jsxFileName = \"/Users/noamk/Documents/GitHub/music-map/client-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { axios } from './axios';\nimport { HashRouter, Route } from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport LoginPage from './pages/LoginPage';\nimport ArtistPage from './pages/ArtistPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  //    *** APP STATES\n  const [artistsFull, setArtistsFull] = useState([]);\n  const [locationsFull, setLocationsFull] = useState([]);\n  const [searchTerm, setSearchTerm] = useState([]);\n  const [artistsResults, setArtistsResults] = useState([]);\n  const [locationsResults, setLocationsResults] = useState([]);\n  const [selectedArtist, setSelectedArtist] = useState(artistsFull[0]); //    ***  GET & SET FULL DATA  ***\n\n  const getAllArtists = async () => {\n    const response = await axios.get('/artists').catch(err => console.log('Error: ', err));\n\n    if (response && response.data) {\n      setArtistsFull(response.data);\n      const topTenArtist = [...artistsFull].slice(8);\n      setArtistsResults(topTenArtist);\n      console.log('artist top 10', artistsResults);\n    }\n  };\n\n  const getAllLocations = async () => {\n    const response = await axios.get('/locations').catch(err => console.log('Error: ', err));\n\n    if (response && response.data) {\n      setLocationsFull(response.data);\n      setLocationsResults(response.data);\n    }\n  };\n\n  useEffect(() => {\n    getAllArtists();\n    getAllLocations();\n  }, []); //    *** HANDLE SEARCH RESULTS ***\n  //1. get input from HomePage and send to searchHandler\n\n  const getInput = inputTerm => {\n    console.log('in App ', typeof inputTerm);\n    return setSearchTerm(inputTerm); // if (inputTerm.length > 2) {\n    //       setSearchTerm('car');\n    //       searchHandler();\n    // } else {\n    //       setSearchTerm(' ');\n    // }\n  };\n\n  useEffect(() => {\n    console.log(searchTerm);\n    searchHandler();\n  }, [searchTerm]); //2. return only artist with names that includes the input\n\n  const searchHandler = () => {\n    if (searchTerm !== '') {\n      console.log('i', searchTerm);\n      const newArtistlist = artistsFull.filter(a => {\n        return Object.values(a).join(' ').toLowerCase().includes(searchTerm.toLowerCase());\n      });\n      setArtistsResults(newArtistlist); //get distinct locations array from artistresults list\n\n      getLocationsList();\n    } else {\n      setArtistsResults(artistsFull);\n      console.log('else');\n      getLocationsList();\n    }\n  }; //3. filter location list accordind to artist filtered list\n\n\n  const getLocationsList = () => {\n    const locationsIdList = artistsResults.map(a => a.location);\n    const locationsToMark = locationsFull.filter(m => locationsIdList.includes(m.id));\n    setLocationsResults(locationsToMark);\n    console.log(locationsResults);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(HashRouter, {\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(HomePage, {\n            artists: artistsResults,\n            locations: locationsResults,\n            selectedArtistsCB: setSelectedArtist,\n            getInput: getInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/login\",\n          children: /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/artist/:id\",\n          children: /*#__PURE__*/_jsxDEV(ArtistPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"footer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 19\n    }, this), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 13\n  }, this);\n};\n\n_s(App, \"WGH/tD4ZiFoFmHT0PWlpgRxH1gs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/noamk/Documents/GitHub/music-map/client-app/src/App.js"],"names":["React","useState","useEffect","axios","HashRouter","Route","HomePage","LoginPage","ArtistPage","App","artistsFull","setArtistsFull","locationsFull","setLocationsFull","searchTerm","setSearchTerm","artistsResults","setArtistsResults","locationsResults","setLocationsResults","selectedArtist","setSelectedArtist","getAllArtists","response","get","catch","err","console","log","data","topTenArtist","slice","getAllLocations","getInput","inputTerm","searchHandler","newArtistlist","filter","a","Object","values","join","toLowerCase","includes","getLocationsList","locationsIdList","map","location","locationsToMark","m","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { axios } from './axios';\nimport { HashRouter, Route } from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport LoginPage from './pages/LoginPage';\nimport ArtistPage from './pages/ArtistPage';\n\nconst App = () => {\n      //    *** APP STATES\n      const [artistsFull, setArtistsFull] = useState([]);\n      const [locationsFull, setLocationsFull] = useState([]);\n      const [searchTerm, setSearchTerm] = useState([]);\n      const [artistsResults, setArtistsResults] = useState([]);\n      const [locationsResults, setLocationsResults] = useState([]);\n      const [selectedArtist, setSelectedArtist] = useState(artistsFull[0]);\n\n      //    ***  GET & SET FULL DATA  ***\n      const getAllArtists = async () => {\n            const response = await axios\n                  .get('/artists')\n                  .catch((err) => console.log('Error: ', err));\n            if (response && response.data) {\n                  setArtistsFull(response.data);\n                  const topTenArtist = [...artistsFull].slice(8);\n                  setArtistsResults(topTenArtist);\n                  console.log('artist top 10', artistsResults);\n            }\n      };\n      const getAllLocations = async () => {\n            const response = await axios\n                  .get('/locations')\n                  .catch((err) => console.log('Error: ', err));\n            if (response && response.data) {\n                  setLocationsFull(response.data);\n                  setLocationsResults(response.data);\n            }\n      };\n\n      useEffect(() => {\n            getAllArtists();\n            getAllLocations();\n      }, []);\n\n      //    *** HANDLE SEARCH RESULTS ***\n\n      //1. get input from HomePage and send to searchHandler\n      const getInput = (inputTerm) => {\n            console.log('in App ', typeof inputTerm);\n            return setSearchTerm(inputTerm);\n\n            // if (inputTerm.length > 2) {\n            //       setSearchTerm('car');\n            //       searchHandler();\n            // } else {\n            //       setSearchTerm(' ');\n            // }\n      };\n\n      useEffect(() => {\n            console.log(searchTerm);\n            searchHandler();\n      }, [searchTerm]);\n\n      //2. return only artist with names that includes the input\n      const searchHandler = () => {\n            if (searchTerm !== '') {\n                  console.log('i', searchTerm);\n                  const newArtistlist = artistsFull.filter((a) => {\n                        return Object.values(a)\n                              .join(' ')\n                              .toLowerCase()\n                              .includes(searchTerm.toLowerCase());\n                  });\n                  setArtistsResults(newArtistlist);\n                  //get distinct locations array from artistresults list\n                  getLocationsList();\n            } else {\n                  setArtistsResults(artistsFull);\n                  console.log('else');\n                  getLocationsList();\n            }\n      };\n\n      //3. filter location list accordind to artist filtered list\n      const getLocationsList = () => {\n            const locationsIdList = artistsResults.map((a) => a.location);\n            const locationsToMark = locationsFull.filter((m) =>\n                  locationsIdList.includes(m.id)\n            );\n            setLocationsResults(locationsToMark);\n            console.log(locationsResults);\n      };\n\n      return (\n            <div className='app'>\n                  <HashRouter>\n                        <main className='container'>\n                              <Route exact path='/'>\n                                    <HomePage\n                                          artists={artistsResults}\n                                          locations={locationsResults}\n                                          selectedArtistsCB={setSelectedArtist}\n                                          getInput={getInput}\n                                    />\n                              </Route>\n                              <Route exact path='/login'>\n                                    <LoginPage />\n                              </Route>\n\n                              <Route exact path='/artist/:id'>\n                                    <ArtistPage />\n                              </Route>\n                        </main>\n                  </HashRouter>\n                  <footer className='footer'></footer>;\n            </div>\n      );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}